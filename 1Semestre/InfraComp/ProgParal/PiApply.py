from multiprocessing import Process, current_process, Queue, cpu_count
import multiprocessing as mp
import itertools
import time

PROCS = cpu_count()                                                                                         # conta o número de processadores disponíveis para uso no computador. (tenho um processador com 8 cores)...
Total = 0.0                                                                                                 # uma variável para receber o valor da soma do cáculo de Pi, obtidas em cada processo.

def pi(inicio, num_passos, passo):
    print("Inicio: " + str(inicio))                                                                         # imprime: ponto de partida do cálculo...
    print("Final: " + str(num_passos))                                                                      # imprime: número total de passos...
    print("Passo: " + str(passo))                                                                           # imprime: tamanho do passo...
    print("PROCS: " + str(PROCS)) 
    sum = 0.0                                    

    for i in range(inicio, num_passos):                                                                     # loop for: Inicio do loop sobre o número de passos...
      x = (i + 0.5)*passo                                                                                   # define o início do primeiro passo em (i+0,5)...
      sum = sum + 4.0/(1.0 + x*x)                  
    #print(sum*passo)
    #print("Pi: %.10f" %(sum))                                                            
    return(sum*passo)                                                                                        # retorna: sum*passo

if __name__ == "__main__":                                                                                   # define "__main__" como método de "__name__"...
    num_passos = 100000000                                                                                   # define o número de passos...
    sum = 0.0
    passo = 1.0/num_passos                                                                                   # define o tamanho do passo...
    proc_size = int(num_passos/PROCS)                                                                        # divide a quantidade de passos pelo número de processos...
    
    pool = mp.Pool(PROCS)
  
    tic = time.time()                                                                                        # inicio do contador...
    results = [pool.apply(pi, args=(i*proc_size, (i+1)*proc_size - 1, passo, )) for i in range(PROCS)]       # função aplly: passa-se a função definida e os parâmetros da função "pi" em args
    toc = time.time()                                                                                        # final do contador...
    
    print('O resultado do cálculo do Pi em cada processo é:','\n', results) 
    print("Tempo: %.8f s" %(toc-tic))                                                                        # imprime: tempo de execução...  

    for i in results:                                                                                        # loop for: para percorrer cada elemento em 'results' e obter a soma dos cálculos em cada processo.
      Total = Total + i                                                                                      # soma: cada elemento 'i' da lista 'results'                                                              
    print('O valor de Pi é:', Total)                                                                         # imprime: o valor de Pi.

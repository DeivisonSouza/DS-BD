db<-data.frame(numerico = c(num, NA,NA,NA),
fator = fat)
db
str(db)
as.matrix(db)
data.matrix(db)
x<-1:6
attr(x)
x<-1:6
names(x)<-c("um","dois","tres","quatro","cinco","seis")
x
names(x)
attributes(x)
class(x)
typeof(x)
x*2
names(x)<-NULL
x
length(x)<-10
x
length(x)<-6
dim(x)<-c(3,2)
dim(x) <- NULL
da
attributes(da)
row.names(da)
m<-m<-matrix(c(2,0,9,8,,4,7,4,1,5), nrow=3, ncol=4, byrow=TRUE)
m<-m<-matrix(c(2,0,9,8,4,7,4,1,5), nrow=3, ncol=4, byrow=TRUE)
m<-m<-matrix(c(2,0,9,8,4,7,4,1,5), nrow=3, ncol=3, byrow=TRUE)
m
m<-m<-matrix(c(2,0,9,8,4,7,4,1,5), nrow=3, ncol=3, byrow=F)
m
?rownames
rownames(m) <- c("A","B","C")
m
colnames(m) <- c("D","E","F")
m
lista<-list(rep(c("A","B","C"),times=c(2,5,4)),m)
lista
row.names(lista)<-c("Vector", "Matriz")
colnames(lista)<-c("Vector", "Matriz")
lista<-list(Vatror=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista
lista<-list(Vetor=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista
caracter<-c("brava","joaquina","armação")
?list
lista<-caracter
lista
lista<-list(Vetor=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista
lista<-list(lista,caracter)
lista
lista<-list(lista,Fator=caracter)
lista
lista<-list(rep(c("A","B","C"),times=c(2,5,4)),m)
lista
lista<-list(Vetor=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista
caracter<-c("brava","joaquina","armação")
?list
lista<-list(lista,Fator=caracter)
lista
data.frame(local= c("A", "B", "C", "D"), contagem=c(42,34,59,18))
df<-data.frame(local= c("A", "B", "C", "D"), contagem=c(42,34,59,18))
df
data.frame(Nome=c("Deivison"), Sobrenome=c("Souza"), Animal=c("Sim"), N=c(1))
data.frame(Nome=c("Deivison","Marcio"),
Sobrenome=c("Souza", "Liz"),
Animal=c("Sim","Não"),
N=c(1,0))
data.frame(Nome=c("Deivison","Marcio","Jayme"),
Sobrenome=c("Souza", "Liz", "Silva"),
Animal=c("Sim","Não","Não"),
N=c(1,0,0))
lista<-list(Vetor=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista
lista<-list(rep(c("A","B","C"),times=c(2,5,4)),m)
lista
names(lista)<-c("Vetor","Matriz")
lista
caracter<-c("brava","joaquina","armação")
?list
lista<-list(lista,Fator=caracter)
lista
lista<-list(Vetor=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista
lista$caracter<-c("brava","joaquina","armação")
lista
lista<-list(Vetor=rep(c("A","B","C"),times=c(2,5,4)),Matriz=m)
lista<-list(lista,Fator=caracter)
lista
data.frame(Nome=c("Deivison","Marcio","Jayme"),
Sobrenome=c("Souza", "Liz", "Silva"),
Animal=c("Sim","Não","Não"),
N=c(1,0,0))
data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
N=1)
rbind("Marcio","Liz","Não",0)
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
N=1)
rbind(df,"Marcio","Liz","Não",0)
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
N=1)
df
rbind(df,c("Marcio","Liz","Não",0))
cbind(df,c("Marcio","Liz","Não",0))
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
N=1)
df
rbind(m,rep(99,4))
rbind(df,"Marcio","Liz","Não",0)
cbind(df,"Marcio","Liz","Não",0)
rbind(df,"Marcio","Liz","Não",0)
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
N=1)
df
df<-data.frame(Nome="Deivison", Sobrenome="Souza", Animal="Sim", N=1)
df
rbind(df,c("Marcio","Liz","Não",0))
df
rbind(df,c("Marcio","Liz","Não",0))
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal=TRUE,
n=1)
df
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
n=1)
df
rbind(df,c("Marcio","Liz","Não",0))
rbind(df,list("Marcio","Liz","Não",0))
df<-rbind(df,list("Marcio","Liz","Não",0))
levels(df$nome)<-c("Deivison","Marcio")
levels(df$Sobrenome)<-c("Deivison","Liz")
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
n=1)
levels(df$nome)<-c("Deivison","Marcio")
df
levels(df$nome)<-c("Deivison","Marcio")
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
n=1)
str(df)
levels(df$Nome)<-c("Deivison","Marcio")
levels(df$Sobrenome)<-c("Deivison","Liz")
levels(df$Animal)<-c("Sim","Não")
df<-rbind(da,list("Marcio","Liz","Não",0))
df
df<-data.frame(Nome="Deivison",
Sobrenome="Souza",
Animal="Sim",
n=1)
str(df)
levels(df$Nome)<-c("Deivison","Marcio")
levels(df$Sobrenome)<-c("Deivison","Liz")
levels(df$Animal)<-c("Sim","Não")
df<-rbind(df,list("Marcio","Liz","Não",0))
df
cont<-c(8,4,NA,9,6,1,7,9)
cont
[4]
cont[4]
cont[-4]
cont[c(1,4,8)]
cont[-c(1,4,8)]
cont[1:5]
cont[-(1:5)]
cont[seq(1,8,2)]
x<-c(88, 5, 12 , 13)
x[3]
x[1]
x[x==c(13,5)]
x[c(2,4)]
x[-c(88,13)]
x[-c(1,4)]
x[c(4,2)]
y<-c(x[1:3,168,x[4]])
y<-c(x[1:3],168,x[4])
y
append(x, 168, after = 3)
cont[cont==NA]
cont[is.na(cont)]
is.na(cont)
cont[is.na(cont)]
is.na(cont) <- 0
is.na(cont) <- 0
cont[is.na(cont)]<-0
cont
cont[is.na(cont)]<-0 #Por zero...
cont
cont[3] <- NA
cont
!is.na(cont)
cont[!is.na(cont)]
names(cont) <- letters[1:length(cont)]
cont
cont["d"]
cont["d"]
cont[c("f","a")]
m<-matrix(1:9,nrow=3)
m
m[2,3]
m[3,]
m[,2]
m[3, , drop=FALSE]
m[, 2, drop=FALSE]
m[c(1,3),c(2,3)]
colnames(m)<- LETTERS[1:3]
rownames(m)<- LETTERS[24:26]
m
m["Z","A"]
m[,"B",drop=F]
m[1,"C"]
lis<-list(c(3,8,7,4),m,5:0) #3 componentes
lis
lis[1]
class(lis[1])
class(lis[[1]])
mean(lis[[1]])
lis[[1]][3]
lis[[2]][,2]
names(list)<-c("Vetor1","Matriz","Vetor2")
names(lis)<-c("Vetor1","Matriz","Vetor2")
lis$Vetor1
lis$Matriz[2,3]
lis[["Vetor2"]]
da<-data.frame(A=4:1,B=c(2,NA,5,8))
da
da[2,1]
da[,2]
da[,"B"]
row.names(da)
da["1",]
da[1,]
da[,2]
da[,2, drop=F]
class(da[,2, drop=F])
str(da)
da$A
da$B
da$A[c(1,3)]
#--------------------------------------------------------------------------------------
# Indexação e seleção condicional
#--------------------------------------------------------------------------------------
dados<-c(5,15,42,28,79,4,7,14)
dados[dados>15]
dados[dados>=15]
dados[dados>15 & dados <=35]
dados>15
dados>15 & dados<=35
dados[dados>15 | dados<=35]
dados>15 | dados<=35
#
cara<-letters[1:length(dados)]
cara
dados[cara == "a"]
#Vetor condicionado a outro vetor...
cara<-letters[1:length(dados)]
cara
dados[cara == "a"]
cara == "a"
dados[cara == "a" & cara == "c"]
cara == "a" & cara == "c"
dados[cara == "a" | cara == "c"]
dados[cara == c("a","c")]
dados[cara %in% c("a","c")]
cara %in% c("a","c")
c(1,2,3) == c(3,2,1)
1  %in% c(3,4,5)
c(1,2) %in% c(3,4,5) #Existe 1 ou 2 em qualquer lugar do vetor c(3,4,5)?
c(1,2,3,4) %in% c(3,4,5)
x <- c(1,2,3,4)
x[x %in% c(3,4,5)]
#
cara[dados == 15]
cara[dados > 15]
which(dados > 15)
dados[cara == "a"]
which(cara == "a")
dados[cara %in% c("a","b")]
#--------------------------------------------------------------------------------------
# Seleção condicional em data frames
#--------------------------------------------------------------------------------------
dados<-data.frame(ano=c(2001,2002,2003,2004,2005),
captura = c(26,18,25,32,NA),
porto = c("SP","RS","SC","SC","RN"))
str(dados)
dados[dados$ano == 2004, ]
dados[dados$porto == "SC", ]
dados[dados$ano == 2004, "captura"]
dados[dados$ano == 2004, 2]
dados[dados$captura > 20 & dados&porto == "SP",]
dados[dados$captura > 20 & dados$porto == "SP",]
dados[dados$captura > 20,]
dados[dados$captura > 20 $ is.na(dados$captura)]
dados[dados$captura > 20 & is.na(dados$captura)]
dados[dados$captura > 20 & !is.na(dados$captura)]
dados[dados$captura > 20 & !is.na(dados$captura),]
dados[dados$captura > 20 & complete.cases(dados),]
#Função subset
dados[dados$porto == "SP",]
subset(dados, porto == "SP")
dados[dados$captura > 20,]
subset(dados, captura > 20)
dados[dados, captura > 20, select = "captura"]
dados[dados$captura > 20, "captura"]
subset[dados, captura > 20, select = "captura"]
subset[dados, captura > 20, select = "captura"]
dados[dados$captura > 20, "captura"]
subset[dados, captura > 20, select = "captura"]
#--------------------------------------------------------------------------------------
# Seleção condicional em data frames
#--------------------------------------------------------------------------------------
dados<-data.frame(ano=c(2001,2002,2003,2004,2005),
captura = c(26,18,25,32,NA),
porto = c("SP","RS","SC","SC","RN"))
dados[dados$captura > 20, "captura"]
subset(dados, captura > 20, select = "captura")
subset(dados, captura > 20, select = c("ano", "captura"))
carang<-data.frame(local=C("Joaquina", "Campeche", "Armação", "Praia Mole"),
n = c(42,34,59,18))
car<-data.frame(local= c("Joaquina", "Campeche", "Armação", "Praia Mole"),
n = c(42,34,59,18))
car
car[car$n < 30]
car[car$n < 30,]
car
#3
car$região<-c("leste","sul","sul","leste")
car
#4
car[car$região == "leste" & car$n < 20,]
str(car)
car<-data.frame(local= c("Joaquina", "Campeche", "Armação", "Praia Mole"),
n = c(42,34,59,18))
str(car)
#2
car[car$n < 30,]
#2
car[car$n < 30,]
car[car$n < 30, "local"]
car$local[car$n < 30]
subset(car, n <30, select="praias")
subset(car, n <30, select="local")
#3
car$região<-NA
car
#Alternativa
car$região<-c("leste","sul","sul","leste")
#Alternativa
car$região<-c("leste","sul","sul","leste")
#3
car$região<-NA #Posso criar a coluna e inserir NA
car
#4
car$região[car$local %in% c("Joaquina", "Praia Mole")] <- "leste"
car
car$região[car$local %in% c("Campeche", "Armação")] <- "sul"
car
#5
car[car$região == "sul" & car$n < 40,]
#5
car$local[car$região == "sul" & car$n > 40]
car[car$região == "sul" & car$n < 40,]
#6
car$região[car$n > 50]
#Programando com dados...
for(i in 1:10){
prin(i)
}
#Programando com dados...
for(i in 1:10){
print(i)
}
#-----------------------------------------------------------------------------------------------
#Programando com dados...
#-----------------------------------------------------------------------------------------------
for(i in 1:10){
print(i)
}
x <- 100:200
for(j in 1:10){
print(x[j])
}
for(i in c(2,9,4,6)){
print(i^2)
}
#
for(veiculos in c("carro","onibus","bicicleta")){
print(veiculos)
}
#-------------------------------------------------------------------------------------------------
url<-"http://leg.ufpr.br/~fernandomayer/data/notas.csv"
head(dados,10)
tail(dados,10)
dados[1:10,]
#-------------------------------------------------------------------------------------------------
url<-"http://leg.ufpr.br/~fernandomayer/data/notas.csv"
dados<-read.table(url, header = TRUE, sep = ";", dec = ",", stringsAsFactors = FALSE)
dados$media <- 0
for (i in 1:30){
dados$media[i]<-sum(dados[i, c("prova1","prova2","prova3")])/3
}
#-----------------------------------------------------------------------------------------------------
#Estrutura de seleção if()
#-----------------------------------------------------------------------------------------------------
x<-100:200
for(j in 1:10){
if(x[j] <=105){
print("Menor ou igual a 105")
}
}
#-----------------------------------------------------------------------------------------------------
#Estrutura de seleção if()
#-----------------------------------------------------------------------------------------------------
x<-100:200
for(j in 1:10){
if(x[j] <=105){
print("Menor ou igual a 105")
} else{
print("Maior do que a 105")
}
}
#Elevar ao quadrado usando for()
y1<-numeric(length(x))
for(i in 1:length(x)){
yi[i] <- x[i]^2
}
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
head(y1)
y2<-x^2
identical(y1, y2)
#Tempo que leva para executar uma operação
system.time(
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
)
system.time(
y2<-x^2)
#Elevar ao quadrado usando for()
y1<-numeric(length(x))
#Tempo que leva para executar uma operação
system.time(
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
)
system.time(
y2<-x^2)
head(y1)
y2<-x^2
identical(y1, y2)
#Tempo que leva para executar uma operação
system.time(
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
)
#Elevar ao quadrado usando for()
y1<-numeric(length(x))
#Tempo que leva para executar uma operação
system.time(
y1<-numeric(length(x))
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
)
#Tempo que leva para executar uma operação
system.time(
y1<-numeric(length(x))
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
)
y1<-numeric(length(x))
system.time(
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
)
system.time(
y2<-x^2
)
system.time({
y1<-numeric(length(x))
for(i in 1:length(x)){
y1[i] <- x[i]^2
}
})
unique(dados$pais)
apply(dados2[,5:6], 2, mean)
lapply(dados2[,5:6], 2, summary)
library(plyr)
